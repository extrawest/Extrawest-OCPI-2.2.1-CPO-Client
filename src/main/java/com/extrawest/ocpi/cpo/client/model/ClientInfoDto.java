/*
 * OCPI 2.2.1
 * This API exposes endpoints to manage OCPI entities.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: ocpi@extrawest.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.extrawest.ocpi.cpo.client.model;

import com.fasterxml.jackson.annotation.*;

import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * ClientInfoDto
 */
@JsonPropertyOrder({
        ClientInfoDto.JSON_PROPERTY_PARTY_ID,
        ClientInfoDto.JSON_PROPERTY_COUNTRY_CODE,
        ClientInfoDto.JSON_PROPERTY_ROLE,
        ClientInfoDto.JSON_PROPERTY_STATUS,
        ClientInfoDto.JSON_PROPERTY_LAST_UPDATED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-23T13:23:59.711846+02:00[Europe/Kiev]")
public class ClientInfoDto {
    public static final String JSON_PROPERTY_PARTY_ID = "party_id";
    public static final String JSON_PROPERTY_COUNTRY_CODE = "country_code";
    public static final String JSON_PROPERTY_ROLE = "role";
    public static final String JSON_PROPERTY_STATUS = "status";
    public static final String JSON_PROPERTY_LAST_UPDATED = "last_updated";
    private String partyId;
    private String countryCode;
    private RoleEnum role;
    private StatusEnum status;
    private OffsetDateTime lastUpdated;

    public ClientInfoDto() {
    }

    public ClientInfoDto partyId(String partyId) {

        this.partyId = partyId;
        return this;
    }

    /**
     * Get partyId
     *
     * @return partyId
     **/
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_PARTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getPartyId() {
        return partyId;
    }

    @JsonProperty(JSON_PROPERTY_PARTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPartyId(String partyId) {
        this.partyId = partyId;
    }

    public ClientInfoDto countryCode(String countryCode) {

        this.countryCode = countryCode;
        return this;
    }

    /**
     * Get countryCode
     *
     * @return countryCode
     **/
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getCountryCode() {
        return countryCode;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    public ClientInfoDto role(RoleEnum role) {

        this.role = role;
        return this;
    }

    /**
     * Get role
     *
     * @return role
     **/
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ROLE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public RoleEnum getRole() {
        return role;
    }

    @JsonProperty(JSON_PROPERTY_ROLE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRole(RoleEnum role) {
        this.role = role;
    }

    public ClientInfoDto status(StatusEnum status) {

        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     **/
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public StatusEnum getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    public ClientInfoDto lastUpdated(OffsetDateTime lastUpdated) {

        this.lastUpdated = lastUpdated;
        return this;
    }

    /**
     * Get lastUpdated
     *
     * @return lastUpdated
     **/
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public OffsetDateTime getLastUpdated() {
        return lastUpdated;
    }

    @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLastUpdated(OffsetDateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ClientInfoDto clientInfoDto = (ClientInfoDto) o;
        return Objects.equals(this.partyId, clientInfoDto.partyId) &&
                Objects.equals(this.countryCode, clientInfoDto.countryCode) &&
                Objects.equals(this.role, clientInfoDto.role) &&
                Objects.equals(this.status, clientInfoDto.status) &&
                Objects.equals(this.lastUpdated, clientInfoDto.lastUpdated);
    }

    @Override
    public int hashCode() {
        return Objects.hash(partyId, countryCode, role, status, lastUpdated);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ClientInfoDto {\n");
        sb.append("    partyId: ").append(toIndentedString(partyId)).append("\n");
        sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
        sb.append("    role: ").append(toIndentedString(role)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets role
     */
    public enum RoleEnum {
        CPO("CPO"),

        EMSP("EMSP"),

        HUB("HUB"),

        NAP("NAP"),

        NSP("NSP"),

        OTHER("OTHER"),

        SCSP("SCSP");

        private String value;

        RoleEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static RoleEnum fromValue(String value) {
            for (RoleEnum b : RoleEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }

    /**
     * Gets or Sets status
     */
    public enum StatusEnum {
        CONNECTED("CONNECTED"),

        OFFLINE("OFFLINE"),

        PLANNED("PLANNED"),

        SUSPENDED("SUSPENDED");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static StatusEnum fromValue(String value) {
            for (StatusEnum b : StatusEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }

}

